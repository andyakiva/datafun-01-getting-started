# Paste your interactive Python practice sesssion here
# See course site for details.
#
# Windows                 Mac
# CTRL A = select all = Command A
# CTRL C = copy =       Command C
# CTRL V = paste =      Command V

# It'll look something like this only longer:

Python 3.10.5 (main, Jul 22 2022, 17:09:35) [GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 2+2
4
>>> print("hello")
hello
>>> a = 5
>>> b = 3
>>> print( min (a, b))
3
>>> 

(base) andy@andy-Inspiron-15-3511:~$ python
Python 3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 7 * 4
28
>>> 2 ** 10
1024
>>> 9 ** (1 / 2)
3.0
>>> 7 / 4
1.75
>>> 7 // 4
1
>>> 3 // 5
0
>>> 14 // 7
2
>>> -13 // 4
-4
>>> 123 / 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ZeroDivisionError: division by zero
>>> z + 7
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'z' is not defined
>>> 17 % 3.5
3.0
>>> 7.5 % 3.5
0.5
>>> 10 * 5 + 3
53
>>> 3 * (4 - 5)
-3
>>> 3 * 4 - 5
7
>>> 4 ** 3 ** 2
262144
>>> (4 ** 3) ** 2
4096
>>> 4 ** (3 ** 2)
262144
>>> print("Welcome to Python!")
Welcome to Python!
>>> print('Welcome to Python')
Welcome to Python
>>> print('Welcom', 'to', 'Python!')
Welcom to Python!
>>> print('Welcome\nto\n\nPython!')
Welcome
to

Python!
>>> print('this is a longer string, so we \
... split it over two lines')
this is a longer string, so we split it over two lines
>>> print('Sum is', 7 + 3)
Sum is 10
>>> type('word)
  File "<stdin>", line 1
    type('word)
         ^
SyntaxError: unterminated string literal (detected at line 1)
>>> type('word')
<class 'str'>
>>> print('int(5.2)', 'truncates 5.2 to', int(5.2))
int(5.2) truncates 5.2 to 5
>>> print('Display "hi" in 1uotes')
Display "hi" in 1uotes
>>> print('Display 'hi' in quotes')
  File "<stdin>", line 1
    print('Display 'hi' in quotes')
          ^^^^^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> print('Display \'hi\' in quotes')
Display 'hi' in quotes
>>> print(Display the name O'Brien")
  File "<stdin>", line 1
    print(Display the name O'Brien")
          ^^^^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> print("Display the name O'Brien")
Display the name O'Brien
>>> print("Display \"hi\" in quotes")
Display "hi" in quotes
>>> print("""Display "hi" and 'bye' in quotes""")
Display "hi" and 'bye' in quotes
>>> triple_quoted_string = """This is a triple-quoted
... string that spans two lines"""
>>> print(triple_quoted_string)
This is a triple-quoted
string that spans two lines
>>> triple_quoted_string
'This is a triple-quoted\nstring that spans two lines'
>>> name = input("What's your name? ")
What's your name? Paul
>>> name
'Paul'
>>> print(name0
... )
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'name0' is not defined. Did you mean: 'name'?
>>> print(name)
Paul
>>> name = input("What's your name? "
... )
What's your name? 'Paul'
>>> name
"'Paul'"
>>> print(name)
'Paul'
>>> value1 = input('Enter first number: ')
Enter first number: 7
>>> value2 = input('Enter second nymber: ')
Enter second nymber: 3
>>> value1 + value2
'73'
>>> value('Enter an integer: ')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'value' is not defined. Did you mean: 'value1'?
>>> value = input('Enter an integer: ')
Enter an integer: 7
>>> value = int(value)
>>> value
7
>>> another_value = int(input('Enter another integer: '))
Enter another integer: 13
>>> another value
  File "<stdin>", line 1
    another value
            ^^^^^
SyntaxError: invalid syntax
>>> another value
  File "<stdin>", line 1
    another value
            ^^^^^
SyntaxError: invalid syntax
>>> another_value
13
>>> value + another_value
20
>>> bad_value = int(input('Enter another integer: '))
Enter another integer: hello
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: 'hello'
>>> int(10.5)
10
>>> 

